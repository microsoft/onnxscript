import numpy
import onnxscript.ir as ir
from onnx.helper import make_tensor
from onnxscript import script
from onnxscript.onnx_types import FLOAT, INT64
from onnxscript.onnx_opset import opset18


def make_model(
    model_embed_tokens_weight,
    model_layers_0_self_attn_o_proj_weight,
    model_layers_0_self_attn_qkv_proj_weight,
    model_layers_0_mlp_gate_up_proj_weight,
    model_layers_0_mlp_down_proj_weight,
    model_layers_0_input_layernorm_weight,
    model_layers_0_post_attention_layernorm_weight,
    model_layers_1_self_attn_o_proj_weight,
    model_layers_1_self_attn_qkv_proj_weight,
    model_layers_1_mlp_gate_up_proj_weight,
    model_layers_1_mlp_down_proj_weight,
    model_layers_1_input_layernorm_weight,
    model_layers_1_post_attention_layernorm_weight,
    model_norm_weight,
    lm_head_weight,
):
    @script()
    def main_graph(input_ids: INT64['s0','s1'], attention_mask: INT64['s0','s1 + s11'], past_key_values_key_cache_0: FLOAT['s0',10,'s11',128], past_key_values_key_cache_1: FLOAT['s0',10,'s11',128], past_key_values_value_cache_0: FLOAT['s0',10,'s11',128], past_key_values_value_cache_1: FLOAT['s0',10,'s11',128]) -> (FLOAT['s0','s1',100352], FLOAT['s0',10,'s1 + s11',128], FLOAT['s0',10,'s1 + s11',128], FLOAT['s0',10,'s1 + s11',128], FLOAT['s0',10,'s1 + s11',128]):
        val_0 = opset18.Shape(input_ids, end=1, start=0)
        sym_size_int_53 = opset18.Squeeze(val_0)
        val_1 = opset18.Shape(input_ids, end=2, start=1)
        sym_size_int_54 = opset18.Squeeze(val_1)
        val_2 = opset18.Shape(past_key_values_key_cache_0, end=3, start=2)
        sym_size_int_55 = opset18.Squeeze(val_2)
        embedding = opset18.Gather(model_embed_tokens_weight, input_ids, axis=0)
        add_4 = opset18.Add(sym_size_int_55, sym_size_int_54)
        arange = opset18.Range(sym_size_int_55, add_4, 1)
        unsqueeze = opset18.Unsqueeze(arange, 0)
        val_6 = opset18.Constant(value=make_tensor("value", 10, dims=[], vals=[-65504.0]))
        val_8 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_10 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_11 = opset18.Concat(val_8, val_10, axis=0)
        full = opset18.Expand(val_6, val_11)
        arange_1 = opset18.Range(0, add_4, 1)
        view = opset18.Reshape(arange, [-1, 1], allowzero=0)
        gt = opset18.Greater(arange_1, view)
        convert_element_type_default = opset18.Cast(gt, to=10)
        mul_14 = opset18.Mul(full, convert_element_type_default)
        unsqueeze_3 = opset18.Unsqueeze(mul_14, 0)
        unsqueeze_4 = opset18.Unsqueeze(unsqueeze_3, 1)
        val_43 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_46 = opset18.Concat(val_43, [1], [-1], [-1], axis=0)
        size_1 = opset18.Abs(val_46)
        expand_1 = opset18.Expand(unsqueeze_4, size_1)
        unsqueeze_5 = opset18.Unsqueeze(attention_mask, 1)
        unsqueeze_6 = opset18.Unsqueeze(unsqueeze_5, 2)
        convert_element_type_default_1 = opset18.Cast(unsqueeze_6, to=10)
        add_81 = opset18.Add(expand_1, convert_element_type_default_1)
        convert_element_type_default_2 = opset18.Cast(add_81, to=1)
        eq_55 = opset18.Equal(convert_element_type_default_2, 0.0)
        val_128 = opset18.Constant(value=make_tensor("value", 10, dims=[], vals=[-65504.0]))
        masked_fill = opset18.Where(eq_55, val_128, expand_1)
        val_180 = opset18.Shape(expand_1, start=0)
        val_181 = opset18.Gather(val_180, 2, axis=0)
        val_182 = opset18.Range(0, val_181, 1)
        val_188 = opset18.Unsqueeze(val_182, -1)
        val_189 = opset18.Transpose(masked_fill, perm=[2, 1, 0, 3])
        val_190 = opset18.Transpose(expand_1, perm=[2, 1, 0, 3])
        val_191 = opset18.ScatterND(val_190, val_188, val_189, reduction='none')
        slice_scatter = opset18.Transpose(val_191, perm=[2, 1, 0, 3])
        val_193 = opset18.Shape(expand_1, start=0)
        val_194 = opset18.Gather(val_193, 1, axis=0)
        val_195 = opset18.Range(0, val_194, 1)
        val_200 = opset18.Unsqueeze(val_195, -1)
        val_201 = opset18.Transpose(slice_scatter, perm=[1, 0, 2, 3])
        val_202 = opset18.Transpose(expand_1, perm=[1, 0, 2, 3])
        val_203 = opset18.ScatterND(val_202, val_200, val_201, reduction='none')
        slice_scatter_1 = opset18.Transpose(val_203, perm=[1, 0, 2, 3])
        val_205 = opset18.Shape(expand_1, start=0)
        val_206 = opset18.Gather(val_205, 0, axis=0)
        val_207 = opset18.Range(0, val_206, 1)
        val_212 = opset18.Unsqueeze(val_207, -1)
        slice_scatter_2 = opset18.ScatterND(expand_1, val_212, slice_scatter_1, reduction='none')
        unsqueeze_9 = opset18.Unsqueeze(unsqueeze, 1)
        _to_copy_1 = opset18.Cast(unsqueeze_9, to=1)
        _to_copy_2 = opset18.Constant(value=make_tensor("value", 1, dims=[1, 64, 1], vals=[1.0, 0.82373046875, 0.67822265625, 0.55859375, 0.4599609375, 0.378662109375, 0.311767578125, 0.2568359375, 0.21142578125, 0.1741943359375, 0.1434326171875, 0.11810302734375, 0.09722900390625, 0.080078125, 0.06591796875, 0.0543212890625, 0.044708251953125, 0.036834716796875, 0.03033447265625, 0.0249786376953125, 0.02056884765625, 0.016937255859375, 0.013946533203125, 0.01148223876953125, 0.00946044921875, 0.00778961181640625, 0.006412506103515625, 0.005279541015625, 0.0043487548828125, 0.003582000732421875, 0.002948760986328125, 0.0024280548095703125, 0.0020008087158203125, 0.0016469955444335938, 0.0013561248779296875, 0.0011167526245117188, 0.0009198188781738281, 0.0007572174072265625, 0.0006237030029296875, 0.0005135536193847656, 0.0004229545593261719, 0.0003483295440673828, 0.0002868175506591797, 0.00023615360260009766, 0.000194549560546875, 0.00016021728515625, 0.00013184547424316406, 0.00010859966278076172, 8.946657180786133e-05, 7.367134094238281e-05, 6.0677528381347656e-05, 4.9948692321777344e-05, 4.112720489501953e-05, 3.3855438232421875e-05, 2.7894973754882812e-05, 2.294778823852539e-05, 1.8894672393798828e-05, 1.5556812286376953e-05, 1.2814998626708984e-05, 1.055002212524414e-05, 8.702278137207031e-06, 7.152557373046875e-06, 5.900859832763672e-06, 4.827976226806641e-06]))
        matmul = opset18.MatMul(_to_copy_2, _to_copy_1)
        transpose = opset18.Transpose(matmul, perm=[0, 2, 1])
        cat = opset18.Concat(transpose, transpose, axis=-1)
        cos = opset18.Cos(cat)
        sin = opset18.Sin(cat)
        _to_copy_4 = opset18.Cast(cos, to=10)
        _to_copy_5 = opset18.Cast(sin, to=10)
        _to_copy_6 = opset18.Cast(embedding, to=1)
        pow_1 = opset18.Pow(_to_copy_6, 2)
        mean = opset18.ReduceMean(pow_1, [-1], keepdims=1, noop_with_empty_axes=0)
        add_191 = opset18.Add(mean, 1e-05)
        val_247 = opset18.Sqrt(add_191)
        rsqrt = opset18.Reciprocal(val_247)
        mul_171 = opset18.Mul(_to_copy_6, rsqrt)
        _to_copy_7 = opset18.Cast(mul_171, to=10)
        mul_178 = opset18.Mul(model_layers_0_input_layernorm_weight, _to_copy_7)
        val_248 = opset18.Transpose(model_layers_0_self_attn_qkv_proj_weight, perm=[1, 0])
        linear = opset18.MatMul(mul_178, val_248)
        val_259 = opset18.Constant(value_ints=[1])
        slice_24 = opset18.Slice(linear, [0], [5120], [2], val_259)
        val_270 = opset18.Constant(value_ints=[1])
        slice_25 = opset18.Slice(linear, [5120], [6400], [2], val_270)
        val_280 = opset18.Constant(value_ints=[1])
        slice_26 = opset18.Slice(linear, [6400], [9223372036854775807], [2], val_280)
        val_282 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_284 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_286 = opset18.Concat(val_282, val_284, [-1], [128], axis=0)
        view_1 = opset18.Reshape(slice_24, val_286, allowzero=0)
        transpose_1 = opset18.Transpose(view_1, perm=[0, 2, 1, 3])
        val_289 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_291 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_292 = opset18.Concat(val_289, val_291, [-1], [128], axis=0)
        view_2 = opset18.Reshape(slice_25, val_292, allowzero=0)
        transpose_2 = opset18.Transpose(view_2, perm=[0, 2, 1, 3])
        val_295 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_297 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_298 = opset18.Concat(val_295, val_297, [-1], [128], axis=0)
        view_3 = opset18.Reshape(slice_26, val_298, allowzero=0)
        transpose_3 = opset18.Transpose(view_3, perm=[0, 2, 1, 3])
        unsqueeze_10 = opset18.Unsqueeze(_to_copy_4, 1)
        unsqueeze_11 = opset18.Unsqueeze(_to_copy_5, 1)
        mul_220 = opset18.Mul(transpose_1, unsqueeze_10)
        val_310 = opset18.Constant(value_ints=[1])
        slice_27 = opset18.Slice(transpose_1, [0], [64], [3], val_310)
        val_320 = opset18.Constant(value_ints=[1])
        slice_28 = opset18.Slice(transpose_1, [64], [9223372036854775807], [3], val_320)
        neg = opset18.Neg(slice_28)
        cat_1 = opset18.Concat(neg, slice_27, axis=-1)
        mul_237 = opset18.Mul(cat_1, unsqueeze_11)
        add_294 = opset18.Add(mul_220, mul_237)
        mul_245 = opset18.Mul(transpose_2, unsqueeze_10)
        val_330 = opset18.Constant(value_ints=[1])
        slice_29 = opset18.Slice(transpose_2, [0], [64], [3], val_330)
        val_340 = opset18.Constant(value_ints=[1])
        slice_30 = opset18.Slice(transpose_2, [64], [9223372036854775807], [3], val_340)
        neg_1 = opset18.Neg(slice_30)
        cat_2 = opset18.Concat(neg_1, slice_29, axis=-1)
        mul_262 = opset18.Mul(cat_2, unsqueeze_11)
        add_330 = opset18.Add(mul_245, mul_262)
        cat_3 = opset18.Concat(past_key_values_key_cache_0, add_330, axis=-2)
        cat_4 = opset18.Concat(past_key_values_value_cache_0, transpose_3, axis=-2)
        unsqueeze_12 = opset18.Unsqueeze(cat_3, 2)
        val_383 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_387 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_388 = opset18.Concat(val_383, [10], [4], val_387, [128], axis=0)
        size_1_3 = opset18.Abs(val_388)
        expand_3 = opset18.Expand(unsqueeze_12, size_1_3)
        val_390 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_393 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_394 = opset18.Concat(val_390, [40], val_393, [128], axis=0)
        _unsafe_view = opset18.Reshape(expand_3, val_394, allowzero=0)
        unsqueeze_13 = opset18.Unsqueeze(cat_4, 2)
        val_437 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_439 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_440 = opset18.Concat(val_437, [10], [4], val_439, [128], axis=0)
        size_1_4 = opset18.Abs(val_440)
        expand_4 = opset18.Expand(unsqueeze_13, size_1_4)
        val_442 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_444 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_445 = opset18.Concat(val_442, [40], val_444, [128], axis=0)
        _unsafe_view_1 = opset18.Reshape(expand_4, val_445, allowzero=0)
        transpose_4 = opset18.Transpose(_unsafe_view, perm=[0, 1, 3, 2])
        matmul_1 = opset18.MatMul(add_294, transpose_4)
        scalar_tensor_default_1 = opset18.Constant(value=make_tensor("value", 10, dims=[], vals=[0.08837890625]))
        mul_422 = opset18.Mul(matmul_1, scalar_tensor_default_1)
        add_466 = opset18.Add(mul_422, slice_scatter_2)
        val_478 = opset18.Softmax(add_466, axis=-1)
        softmax = opset18.Cast(val_478, to=1)
        _to_copy_8 = opset18.Cast(softmax, to=10)
        matmul_2 = opset18.MatMul(_to_copy_8, _unsafe_view_1)
        transpose_5 = opset18.Transpose(matmul_2, perm=[0, 2, 1, 3])
        val_480 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_482 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_483 = opset18.Concat(val_480, val_482, [-1], axis=0)
        view_4 = opset18.Reshape(transpose_5, val_483, allowzero=0)
        val_485 = opset18.Transpose(model_layers_0_self_attn_o_proj_weight, perm=[1, 0])
        linear_1 = opset18.MatMul(view_4, val_485)
        add_514 = opset18.Add(embedding, linear_1)
        _to_copy_9 = opset18.Cast(add_514, to=1)
        pow_2 = opset18.Pow(_to_copy_9, 2)
        mean_1 = opset18.ReduceMean(pow_2, [-1], keepdims=1, noop_with_empty_axes=0)
        add_531 = opset18.Add(mean_1, 1e-05)
        val_488 = opset18.Sqrt(add_531)
        rsqrt_1 = opset18.Reciprocal(val_488)
        mul_498 = opset18.Mul(_to_copy_9, rsqrt_1)
        _to_copy_10 = opset18.Cast(mul_498, to=10)
        mul_505 = opset18.Mul(model_layers_0_post_attention_layernorm_weight, _to_copy_10)
        val_489 = opset18.Transpose(model_layers_0_mlp_gate_up_proj_weight, perm=[1, 0])
        linear_2 = opset18.MatMul(mul_505, val_489)
        split_split_0, split_split_1 = opset18.Split(linear_2, axis=2, num_outputs=2)
        val_491 = opset18.Sigmoid(split_split_0)
        silu = opset18.Mul(split_split_0, val_491)
        mul_521 = opset18.Mul(split_split_1, silu)
        val_492 = opset18.Transpose(model_layers_0_mlp_down_proj_weight, perm=[1, 0])
        linear_3 = opset18.MatMul(mul_521, val_492)
        add_580 = opset18.Add(add_514, linear_3)
        _to_copy_11 = opset18.Cast(add_580, to=1)
        pow_3 = opset18.Pow(_to_copy_11, 2)
        mean_2 = opset18.ReduceMean(pow_3, [-1], keepdims=1, noop_with_empty_axes=0)
        add_597 = opset18.Add(mean_2, 1e-05)
        val_495 = opset18.Sqrt(add_597)
        rsqrt_2 = opset18.Reciprocal(val_495)
        mul_546 = opset18.Mul(_to_copy_11, rsqrt_2)
        _to_copy_12 = opset18.Cast(mul_546, to=10)
        mul_553 = opset18.Mul(model_layers_1_input_layernorm_weight, _to_copy_12)
        val_496 = opset18.Transpose(model_layers_1_self_attn_qkv_proj_weight, perm=[1, 0])
        linear_4 = opset18.MatMul(mul_553, val_496)
        val_506 = opset18.Constant(value_ints=[1])
        slice_45 = opset18.Slice(linear_4, [0], [5120], [2], val_506)
        val_516 = opset18.Constant(value_ints=[1])
        slice_46 = opset18.Slice(linear_4, [5120], [6400], [2], val_516)
        val_526 = opset18.Constant(value_ints=[1])
        slice_47 = opset18.Slice(linear_4, [6400], [9223372036854775807], [2], val_526)
        val_528 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_530 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_531 = opset18.Concat(val_528, val_530, [-1], [128], axis=0)
        view_5 = opset18.Reshape(slice_45, val_531, allowzero=0)
        transpose_6 = opset18.Transpose(view_5, perm=[0, 2, 1, 3])
        val_534 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_536 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_537 = opset18.Concat(val_534, val_536, [-1], [128], axis=0)
        view_6 = opset18.Reshape(slice_46, val_537, allowzero=0)
        transpose_7 = opset18.Transpose(view_6, perm=[0, 2, 1, 3])
        val_540 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_542 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_543 = opset18.Concat(val_540, val_542, [-1], [128], axis=0)
        view_7 = opset18.Reshape(slice_47, val_543, allowzero=0)
        transpose_8 = opset18.Transpose(view_7, perm=[0, 2, 1, 3])
        unsqueeze_14 = opset18.Unsqueeze(_to_copy_4, 1)
        unsqueeze_15 = opset18.Unsqueeze(_to_copy_5, 1)
        mul_595 = opset18.Mul(transpose_6, unsqueeze_14)
        val_554 = opset18.Constant(value_ints=[1])
        slice_48 = opset18.Slice(transpose_6, [0], [64], [3], val_554)
        val_564 = opset18.Constant(value_ints=[1])
        slice_49 = opset18.Slice(transpose_6, [64], [9223372036854775807], [3], val_564)
        neg_2 = opset18.Neg(slice_49)
        cat_5 = opset18.Concat(neg_2, slice_48, axis=-1)
        mul_612 = opset18.Mul(cat_5, unsqueeze_15)
        add_700 = opset18.Add(mul_595, mul_612)
        mul_620 = opset18.Mul(transpose_7, unsqueeze_14)
        val_574 = opset18.Constant(value_ints=[1])
        slice_50 = opset18.Slice(transpose_7, [0], [64], [3], val_574)
        val_584 = opset18.Constant(value_ints=[1])
        slice_51 = opset18.Slice(transpose_7, [64], [9223372036854775807], [3], val_584)
        neg_3 = opset18.Neg(slice_51)
        cat_6 = opset18.Concat(neg_3, slice_50, axis=-1)
        mul_637 = opset18.Mul(cat_6, unsqueeze_15)
        add_736 = opset18.Add(mul_620, mul_637)
        cat_7 = opset18.Concat(past_key_values_key_cache_1, add_736, axis=-2)
        cat_8 = opset18.Concat(past_key_values_value_cache_1, transpose_8, axis=-2)
        unsqueeze_16 = opset18.Unsqueeze(cat_7, 2)
        val_626 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_628 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_629 = opset18.Concat(val_626, [10], [4], val_628, [128], axis=0)
        size_1_5 = opset18.Abs(val_629)
        expand_5 = opset18.Expand(unsqueeze_16, size_1_5)
        val_631 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_633 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_634 = opset18.Concat(val_631, [40], val_633, [128], axis=0)
        _unsafe_view_2 = opset18.Reshape(expand_5, val_634, allowzero=0)
        unsqueeze_17 = opset18.Unsqueeze(cat_8, 2)
        val_677 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_679 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_680 = opset18.Concat(val_677, [10], [4], val_679, [128], axis=0)
        size_1_6 = opset18.Abs(val_680)
        expand_6 = opset18.Expand(unsqueeze_17, size_1_6)
        val_682 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_684 = opset18.Reshape(add_4, [-1], allowzero=0)
        val_685 = opset18.Concat(val_682, [40], val_684, [128], axis=0)
        _unsafe_view_3 = opset18.Reshape(expand_6, val_685, allowzero=0)
        transpose_9 = opset18.Transpose(_unsafe_view_2, perm=[0, 1, 3, 2])
        matmul_3 = opset18.MatMul(add_700, transpose_9)
        scalar_tensor_default_2 = opset18.Constant(value=make_tensor("value", 10, dims=[], vals=[0.08837890625]))
        mul_797 = opset18.Mul(matmul_3, scalar_tensor_default_2)
        add_872 = opset18.Add(mul_797, slice_scatter_2)
        val_717 = opset18.Softmax(add_872, axis=-1)
        softmax_1 = opset18.Cast(val_717, to=1)
        _to_copy_13 = opset18.Cast(softmax_1, to=10)
        matmul_4 = opset18.MatMul(_to_copy_13, _unsafe_view_3)
        transpose_10 = opset18.Transpose(matmul_4, perm=[0, 2, 1, 3])
        val_719 = opset18.Reshape(sym_size_int_53, [-1], allowzero=0)
        val_721 = opset18.Reshape(sym_size_int_54, [-1], allowzero=0)
        val_722 = opset18.Concat(val_719, val_721, [-1], axis=0)
        view_8 = opset18.Reshape(transpose_10, val_722, allowzero=0)
        val_724 = opset18.Transpose(model_layers_1_self_attn_o_proj_weight, perm=[1, 0])
        linear_5 = opset18.MatMul(view_8, val_724)
        add_920 = opset18.Add(add_580, linear_5)
        _to_copy_14 = opset18.Cast(add_920, to=1)
        pow_4 = opset18.Pow(_to_copy_14, 2)
        mean_3 = opset18.ReduceMean(pow_4, [-1], keepdims=1, noop_with_empty_axes=0)
        add_937 = opset18.Add(mean_3, 1e-05)
        val_727 = opset18.Sqrt(add_937)
        rsqrt_3 = opset18.Reciprocal(val_727)
        mul_873 = opset18.Mul(_to_copy_14, rsqrt_3)
        _to_copy_15 = opset18.Cast(mul_873, to=10)
        mul_880 = opset18.Mul(model_layers_1_post_attention_layernorm_weight, _to_copy_15)
        val_728 = opset18.Transpose(model_layers_1_mlp_gate_up_proj_weight, perm=[1, 0])
        linear_6 = opset18.MatMul(mul_880, val_728)
        split_1_split_0, split_1_split_1 = opset18.Split(linear_6, axis=2, num_outputs=2)
        val_729 = opset18.Sigmoid(split_1_split_0)
        silu_1 = opset18.Mul(split_1_split_0, val_729)
        mul_896 = opset18.Mul(split_1_split_1, silu_1)
        val_730 = opset18.Transpose(model_layers_1_mlp_down_proj_weight, perm=[1, 0])
        linear_7 = opset18.MatMul(mul_896, val_730)
        add_986 = opset18.Add(add_920, linear_7)
        _to_copy_16 = opset18.Cast(add_986, to=1)
        pow_5 = opset18.Pow(_to_copy_16, 2)
        mean_4 = opset18.ReduceMean(pow_5, [-1], keepdims=1, noop_with_empty_axes=0)
        add_1003 = opset18.Add(mean_4, 1e-05)
        val_733 = opset18.Sqrt(add_1003)
        rsqrt_4 = opset18.Reciprocal(val_733)
        mul_921 = opset18.Mul(_to_copy_16, rsqrt_4)
        _to_copy_17 = opset18.Cast(mul_921, to=10)
        mul_928 = opset18.Mul(model_norm_weight, _to_copy_17)
        val_764 = opset18.Transpose(lm_head_weight, perm=[1, 0])
        linear_8 = opset18.MatMul(mul_928, val_764)
        return linear_8, cat_3, cat_7, cat_4, cat_8

    model = main_graph.to_model_proto()
    return model

def make_model_with_random_weights():
    model_embed_tokens_weight = numpy.random.rand(100352,5120).astype(numpy.float32)
    model_layers_0_self_attn_o_proj_weight = numpy.random.rand(5120,5120).astype(numpy.float32)
    model_layers_0_self_attn_qkv_proj_weight = numpy.random.rand(7680,5120).astype(numpy.float32)
    model_layers_0_mlp_gate_up_proj_weight = numpy.random.rand(35840,5120).astype(numpy.float32)
    model_layers_0_mlp_down_proj_weight = numpy.random.rand(5120,17920).astype(numpy.float32)
    model_layers_0_input_layernorm_weight = numpy.random.rand(5120).astype(numpy.float32)
    model_layers_0_post_attention_layernorm_weight = numpy.random.rand(5120).astype(numpy.float32)
    model_layers_1_self_attn_o_proj_weight = numpy.random.rand(5120,5120).astype(numpy.float32)
    model_layers_1_self_attn_qkv_proj_weight = numpy.random.rand(7680,5120).astype(numpy.float32)
    model_layers_1_mlp_gate_up_proj_weight = numpy.random.rand(35840,5120).astype(numpy.float32)
    model_layers_1_mlp_down_proj_weight = numpy.random.rand(5120,17920).astype(numpy.float32)
    model_layers_1_input_layernorm_weight = numpy.random.rand(5120).astype(numpy.float32)
    model_layers_1_post_attention_layernorm_weight = numpy.random.rand(5120).astype(numpy.float32)
    model_norm_weight = numpy.random.rand(5120).astype(numpy.float32)
    lm_head_weight = numpy.random.rand(100352,5120).astype(numpy.float32)
    model = make_model(
        model_embed_tokens_weight,
        model_layers_0_self_attn_o_proj_weight,
        model_layers_0_self_attn_qkv_proj_weight,
        model_layers_0_mlp_gate_up_proj_weight,
        model_layers_0_mlp_down_proj_weight,
        model_layers_0_input_layernorm_weight,
        model_layers_0_post_attention_layernorm_weight,
        model_layers_1_self_attn_o_proj_weight,
        model_layers_1_self_attn_qkv_proj_weight,
        model_layers_1_mlp_gate_up_proj_weight,
        model_layers_1_mlp_down_proj_weight,
        model_layers_1_input_layernorm_weight,
        model_layers_1_post_attention_layernorm_weight,
        model_norm_weight,
        lm_head_weight,
    )
    return model

class _Phi4Test:
    def get_onnx_model(self):
        if not hasattr(self, "_onnx_model"):
            model_proto = make_model_with_random_weights()
            model = ir.serde.deserialize_model(model_proto)
            self._onnx_model = model
        return self._onnx_model

    def get_ort_inputs(self):
        if not hasattr(self, "_ort_inputs"):
            inputs = {
                # TODO
            }
            self._ort_inputs = inputs
        return self._ort_inputs


def phi4lm_test():
    return _Phi4Test()
